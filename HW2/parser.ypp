%{
#include <iostream>
#include <string>
#include "output.hpp"
using namespace std;
extern int yylineno; 
int yylex();
int yyerror(char *s);

// You might need to define your own data structures or include other headers

%}

%nonassoc LBRACE RBRACE SC ASSIGN IF ELSE WHILE BREAK CONTINUE RETURN INT BYTE BOOL TRUE FALSE BINOP AND OR NOT
%nonassoc TYPE ID STRING
%nonassoc  NUM B
%left RELOP
%left '+' '-'
%left '*' '/'
%nonassoc CAST
%nonassoc DOUBLEOP
%nonassoc LPAREN RPAREN 
%%

Program:
    Statements 
    ;

Statements:
    Statement 
    | Statements Statement 
    ;

Statement:
    LBRACE Statements RBRACE 
    | Type ID SC 
    | Type ID ASSIGN Exp SC
    | ID ASSIGN Exp SC
    | Call SC
    | RETURN SC
    | IF LPAREN Exp RPAREN Statement

    | WHILE LPAREN Exp RPAREN Statement
    | BREAK SC
    | CONTINUE SC
    ;

Call:
    ID LPAREN Exp RPAREN
    ;

Type:
    INT     
    | BYTE  
    | BOOL 
    ;

Exp:
    LPAREN Exp RPAREN
    | Exp BINOP Exp
    | ID
    | Call
    | NUM
    | NUM B
    | STRING
    | TRUE
    | FALSE    
    | NOT Exp 
    | Exp AND Exp 
    | Exp OR Exp 
    | Exp RELOP Exp 
    | LPAREN Type RPAREN Exp 
    ;

%%

// You can include C++ code here that defines any additional functions or data structures used above
int main()
{
    return yyparse();
} 

int yyerror(char * s)
{
    printf("Parse error: %s! Bye now\n",s); 
    exit(1);
    return 0;
} 

int yylex()
{
    return getchar();
}